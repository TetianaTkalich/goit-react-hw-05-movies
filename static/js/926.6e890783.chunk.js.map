{"version":3,"file":"static/js/926.6e890783.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/MoviesPage/MoviesPage.js","components/fechApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              \n              <p>{original_title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  \n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MoviesList","import { getMoviesByQuery } from 'components/fechApi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport  MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const query = searchParams.get('query');\n    \n  useEffect(() => {\n    if (query === \"\") return;\n    if (query) {\n      getMovies(query);\n      }   \n  }, [query]);\n\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n      \n  async function getMovies(query) {\n    try {\n     setLoading(true);\n      const data = await getMoviesByQuery(query);\n      setMovies(data);\n      \n    } catch {\n        setError('Ooops. Something went wrong...');\n    }finally {\n     setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n          </form>\n          {loading && 'Loading ...'}\n          {movies && <MoviesList movies={movies} />}\n          {error && <p>Something went wrong. Try again</p>}\n      \n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\n \n// 7090c634f78ae231a1147c5f808c29ff\nconst KEY = '7090c634f78ae231a1147c5f808c29ff';\n// const KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n"],"names":["_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","original_title","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","_x","_getMovies","apply","arguments","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMoviesByQuery","sent","t0","finish","stop","_jsxs","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","MoviesList","KEY","response","axios","abrupt","results","console","log","_callee2","_context2","fetchMoviesCredits","_ref4","_callee4","_context4","cast","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}