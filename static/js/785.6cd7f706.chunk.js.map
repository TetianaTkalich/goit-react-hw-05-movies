{"version":3,"file":"static/js/785.6cd7f706.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBT,GAFpB,OAEXU,EAFW,OAGjBC,QAAQC,IAAIF,GACZN,EAAWM,GAJM,gDAMjBJ,EAAS,EAAD,IANS,yDAAH,qDASlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKR,C,uKCrCKC,EAAM,mCAECC,EAAS,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,kEACuCF,EADvC,oBAFC,cAElBG,EAFkB,yBAMhBA,EAASC,KAAKC,SANE,gCAQpBZ,QAAQC,IAAR,MARoB,yDAAH,qDAYTY,EAAgB,mCAAG,WAAOC,GAAP,gGAERL,EAAAA,EAAAA,IAAA,4DACiCF,EADjC,kBAC8CO,EAD9C,oBAFQ,cAEzBJ,EAFyB,yBAKnBA,EAASC,KAAKC,SALK,gCAQ3BZ,QAAQC,IAAR,MAR2B,yDAAH,sDAwBhBc,EAAkB,mCAAG,WAAOT,GAAP,gGAEVG,EAAAA,EAAAA,IAAA,6CACkBH,EADlB,4BACwCC,EADxC,oBAFU,cAE3BG,EAF2B,yBAMzBA,EAASC,KAAKK,MANW,gCAQ7BhB,QAAQC,IAAR,MAR6B,yDAAH,sDAalBH,EAAkB,mCAAI,WAAOQ,GAAP,gGAEXG,EAAAA,EAAAA,IAAA,6CACkBH,EADlB,4BACwCC,EADxC,oBAFW,cAE5BG,EAF4B,OAKjCV,QAAQC,IAAIS,EAASC,KAAKC,SALO,kBAM1BF,EAASC,KAAKC,SANY,gCAQ9BZ,QAAQC,IAAR,MAR8B,yDAAJ,qD","sources":["components/Reviews/Reviews.js","components/fechApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'components/fechApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        console.log(res);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n    \n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n     \n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","console","log","map","review","author","content","id","KEY","getMovies","axios","response","data","results","getMoviesByQuery","query","fetchMoviesCredits","cast"],"sourceRoot":""}